#安装docker-compose
apt update && apt install curl sudo wget nginx screen -y
curl -sSL https://get.docker.com/ | sh
curl -SL  https://github.com/docker/compose/releases/download/v2.31.0/docker-compose-linux-x86_64 -o /usr/bin/docker-compose && chmod +x /usr/bin/docker-compose
service docker restart

sudo apt update
sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python3-openssl git

curl https://pyenv.run | bash

将以下几行添加到你的 ~/.bashrc 或 ~/.zshrc 文件中
export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

source ~/.bashrc

pyenv install 3.9.18

# 防火墙规则删除
直接删除iptables规则
sudo rm -rf /etc/iptables && reboot
开放所有端口
sudo iptables -P INPUT ACCEPT
sudo iptables -P FORWARD ACCEPT
sudo iptables -P OUTPUT ACCEPT
sudo iptables -F
sudo apt-get purge netfilter-persistent
reboot

# 改密码登陆
echo root:password |sudo chpasswd root
sudo sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config;
sudo sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g' /etc/ssh/sshd_config;
sudo service sshd restart

# dd甲骨文
curl -fLO https://raw.githubusercontent.com/bohanyang/debi/master/debi.sh && chmod a+rx debi.sh
sudo ./debi.sh --cdn --network-console --ethx --bbr --user root --password <新系统用户密码>
sudo shutdown -r now

# x86通用
bash <(wget --no-check-certificate -qO- 'https://git.io/JeiRm') -d 11 -v 64 -a -p <新系统用户密码>

# arm通用
bash <(wget --no-check-certificate -qO- 'https://git.io/JLyvq') -d 11 -v 64 -a -p <新系统用户密码>

swap off

# 更改时区
export TZ='Asia/Shanghai'
source ~/.bashrc

timedatectl set-timezone Asia/Shanghai
timedatectl set-ntp yes

# 设置bbr
cat > /etc/sysctl.conf <<EOF
# 开启IP转发
net.ipv4.ip_forward = 1
net.ipv6.conf.all.forwarding = 1

# TCP SYN缓存大小，防止SYN flood攻击
net.ipv4.tcp_max_syn_backlog = 4096
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syn_retries = 2

# 保护Linux的TCP堆栈免受SYN flood攻击
net.ipv4.tcp_syncookies = 1

# 使用BBR拥塞控制算法
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr

# 提高网络接口队列的大小
net.core.netdev_max_backlog = 5000

# 增加可用于TCP的内存大小
net.ipv4.tcp_rmem = 4096 87380 6291456
net.ipv4.tcp_wmem = 4096 65536 6291456
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

# 启用 TCP 快速打开（TFO）
net.ipv4.tcp_fastopen = 3

# 减少TCP FIN超时
net.ipv4.tcp_fin_timeout = 15

# 减少TIME-WAIT sockets的回收时间
net.ipv4.tcp_tw_reuse = 1

# 减少TCP keepalive的间隔时间
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_intvl = 60
net.ipv4.tcp_keepalive_probes = 5

# 增加文件句柄限制
fs.file-max = 2097152

# 增加可用于网络的端口范围
net.ipv4.ip_local_port_range = 1024 65535

# 禁用IPv6（如果不需要）
#net.ipv6.conf.all.disable_ipv6 = 1
#net.ipv6.conf.default.disable_ipv6 = 1
#net.ipv6.conf.lo.disable_ipv6 = 1

# 降低swap的使用
vm.swappiness = 10

# 开启ARP缓存限制
net.ipv4.neigh.default.gc_thresh1 = 1024
net.ipv4.neigh.default.gc_thresh2 = 2048
net.ipv4.neigh.default.gc_thresh3 = 4096

# 启用网络流量统计
net.netfilter.nf_conntrack_max = 262144
net.netfilter.nf_conntrack_tcp_timeout_established = 86400
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 30
EOF


cat > /etc/sysctl.conf <<EOF
fs.file-max = 1048576
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.ipv4.tcp_mem = 25600 51200 102400
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.core.somaxconn = 10240
net.core.default_qdisc = fq
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_congestion_control = bbr
EOF

cat > /etc/sysctl.conf <<EOF
vm.swappiness = 10
fs.file-max = 1000000
net.ipv4.ip_forward = 1
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_mtu_probing = 1
net.core.default_qdisc = fq
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_thin_linear_timeouts = 1
net.ipv4.tcp_fastopen = 1027
net.ipv4.tcp_fastopen_blackhole_timeout_sec = 0
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr
EOF


sysctl -p && sysctl --system

cat > /etc/hostname <<EOF
neko-download-center
EOF

# 设置流量转发
wget -N --no-check-certificate https://ghproxy.com/https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/socat.sh && chmod +x socat.sh && bash socat.sh
